/* Formatted on 6/4/2023 11:53:36 PM (QP5 v5.227.12220.39754) */
CREATE TABLE USER_GROUP
(
   ID           NUMBER,
   GROUP_NAME   VARCHAR2 (50 BYTE)
);
/

ALTER TABLE USER_GROUP ADD (
  CONSTRAINT USER_GROUP_PK
  PRIMARY KEY
  (ID));
/

CREATE TABLE ITEM_MASTER
(
   ID          NUMBER,
   ITEM_NAME   VARCHAR2 (50 BYTE)
);
/

CREATE TABLE MEAL_COUNT
(
   ID          NUMBER (20),
   M_ID        NUMBER,
   MEAL_DATE   DATE
);
/


CREATE TABLE MEAL_PERIOD
(
   ID          NUMBER,
   MEAL_ID     NUMBER,
   BREAKFAST   NUMBER (1),
   LUNCH       NUMBER (1),
   DINNER      NUMBER (1)
);
/



CREATE TABLE MESS_NAME
(
   ID          NUMBER,
   MESS_NAME   VARCHAR2 (50 BYTE),
   ADDRESS     VARCHAR2 (200 BYTE)
);
/


CREATE TABLE M_MEMBER
(
   ID           NUMBER,
   FULL_NAME    VARCHAR2 (100 BYTE),
   PHONE        VARCHAR2 (30 BYTE),
   EMAIL        VARCHAR2 (30 BYTE),
   PICTURE      BLOB,
   ADDRESS      VARCHAR2 (200 BYTE),
   NID          VARCHAR2 (20 BYTE),
   PROFESSION   VARCHAR2 (50 BYTE)
);

ALTER TABLE M_MEMBER
ADD (user_name VARCHAR2(30 BYTE));


CREATE TABLE SHOP_EXP
(
   ID           NUMBER,
   SHOP_DATE    DATE,
   SHOPPER_ID   NUMBER,
   COST_AMT     NUMBER (10, 2),
   OTHER_COST   NUMBER (10, 2)
);
/


CREATE TABLE SHOP_EXP_D
(
   ID        NUMBER,
   EXP_ID    NUMBER,
   ITEM_ID   NUMBER,
   UNIT      NUMBER,
   QTY       NUMBER,
   PRICE     NUMBER (10, 2)
);
/



CREATE TABLE CASH_SUB
(
   ID            NUMBER,
   M_MEMBER_ID   NUMBER,
   CASH_AMT      NUMBER (10, 2),
   CASH_SUB      DATE
);



ALTER TABLE ITEM_MASTER ADD (
  PRIMARY KEY
  (ID));

ALTER TABLE MEAL_COUNT ADD (
  PRIMARY KEY
  (ID));

ALTER TABLE MEAL_PERIOD ADD (
 PRIMARY KEY
  (ID));

ALTER TABLE MESS_NAME ADD (
  PRIMARY KEY
  (ID));

ALTER TABLE M_MEMBER ADD (
  PRIMARY KEY
  (ID));

ALTER TABLE SHOP_EXP ADD (
  PRIMARY KEY
  (ID));

ALTER TABLE CASH_SUB ADD (
  CONSTRAINT CASH_SUB_C01
  CHECK (m_member_id IS NOT NULL),
  PRIMARY KEY
  (ID));

ALTER TABLE SHOP_EXP_D ADD (
  CONSTRAINT SHOP_EXP_D_R01
  FOREIGN KEY (EXP_ID)
 REFERENCES SHOP_EXP (ID));

ALTER TABLE CASH_SUB ADD (
 CONSTRAINT CASH_SUB_R01
  FOREIGN KEY (M_MEMBER_ID)
  REFERENCES M_MEMBER (ID));

CREATE OR REPLACE TRIGGER trg_items_pk
   BEFORE INSERT OR UPDATE
   ON ITEM_MASTER
   FOR EACH ROW
BEGIN
   IF :new.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :new.id FROM item_master;
   END IF;
END trg_items_pk;
/

CREATE OR REPLACE TRIGGER trg_cash_sub_pk
   BEFORE INSERT OR UPDATE
   ON CASH_SUB
   FOR EACH ROW
BEGIN
   IF :new.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :new.id FROM cash_sub;
   END IF;
END trg_cash_sub_pk;
/


CREATE OR REPLACE TRIGGER trg_mess_name_pk
   BEFORE INSERT OR UPDATE
   ON MESS_NAME
   FOR EACH ROW
BEGIN
   IF :new.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :new.id FROM mess_name;
   END IF;
END trg_mess_name_pk;
/


CREATE OR REPLACE TRIGGER trg_shop_exp_pk
   BEFORE INSERT OR UPDATE
   ON SHOP_EXP
   FOR EACH ROW
BEGIN
   IF :new.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :new.id FROM SHOP_EXP;
   END IF;
END trg_shop_exp_pk;
/


CREATE OR REPLACE TRIGGER trg_shop_exp_d_pk
   BEFORE INSERT OR UPDATE
   ON SHOP_EXP_D
   FOR EACH ROW
BEGIN
   IF :new.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :new.id FROM SHOP_EXP_D;
   END IF;
END trg_shop_exp_d_pk;
/

ALTER TABLE M_MEMBER ADD
CONSTRAINT M_MEMBER_U01
 UNIQUE (USER_NAME);
/

ALTER TABLE M_MEMBER ADD
CONSTRAINT M_MEMBER_U02
 UNIQUE (NID);
/

CREATE TABLE IS_ACTIVATE
(
   PID      NUMBER (1),
   STATUS   VARCHAR2 (30 BYTE)
);


ALTER TABLE IS_ACTIVATE ADD (
  CONSTRAINT IS_ACTIVATE_PK
  PRIMARY KEY
  (pid));
  /
  
  /* Formatted on 6/5/2023 1:00:57 AM (QP5 v5.227.12220.39754) */
CREATE TABLE user_mess
(
   ID           NUMBER,
   member_id    NUMBER,
   mess_id      NUMBER,
   entry_by     VARCHAR2 (200 BYTE),
   entry_date   DATE
);
/

CREATE OR REPLACE TRIGGER t_user_mess_pk
   BEFORE INSERT OR UPDATE
   ON user_mess
   FOR EACH ROW
BEGIN
   IF :NEW.id IS NULL
   THEN
      SELECT NVL (MAX (id), 0) + 1 INTO :NEW.id FROM user_mess;
   END IF;
END t_user_mess_pk;
/


ALTER TABLE user_mess ADD (
  CONSTRAINT user_mess_PK
  PRIMARY KEY
  (ID));